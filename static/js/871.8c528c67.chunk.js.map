{"version":3,"file":"static/js/871.8c528c67.chunk.js","mappings":"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","sources":["redux/myContacts/contactsSelectors.js","components/filter/Filter.styled.js","components/filter/Filter.jsx","components/list/ContactsList.styled.js","components/list/ContactsItem.styled.js","components/list/ContactsItem.jsx","components/list/ContactsList.jsx","components/form/FormContacts.styled.js","components/form/FormContacts.jsx","pages/PagesStyled.js","pages/ContactsPage.jsx"],"sourcesContent":["export const getItems = state => state.phonebook.items.contacts;\nexport const getIsLoading = state => state.phonebook.items.isLoading;\nexport const getFilter = state => state.phonebook.filter.value;\n\nexport const getVisibleContacts = state => {\n  const allContacts = getItems(state);\n  const contactsFilter = getFilter(state);\n\n  return allContacts.filter(contact =>\n    contact.name.toLowerCase().includes(contactsFilter.toLowerCase())\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: 24px;\n  color: ${p => p.theme.colors.accentText};\n  justify-content: center;\n`;\n\nexport const FilterInput = styled.input`\n  width: 800px;\n  margin-top: ${p => p.theme.space[2]}px;\n  margin-bottom: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.none};\n  box-shadow: 2px 4px rgba(0, 0, 0, 0.25);\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { FilterContainer, FilterInput } from './Filter.styled';\nimport { TbSearch } from 'react-icons/tb';\nimport { getFilter } from '../../redux/myContacts/contactsSelectors';\nimport { filterSlice } from '../../redux/myContacts/contactsSlice';\nconst filterId = nanoid();\n\nexport const Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n  return (\n    <FilterContainer>\n      <label>\n        {' '}\n        Find contacts by name <TbSearch />\n      </label>\n\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={e =>\n          dispatch(filterSlice.actions.changeFilter(e.target.value))\n        }\n        id={filterId}\n      />\n    </FilterContainer>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n","import styled from 'styled-components';\n\nexport const ContactsTitle = styled.h2`\n  text-shadow: ${p => p.theme.textShadow.standart};\n  color: ${p => p.theme.colors.white};\n\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n`;\n\nexport const Name = styled.span`\n  margin-right: 215px;\n`;\nexport const List = styled.ul`\n  width: ${p => p.theme.space[9]}px;\n  margin: ${p => p.theme.space[0]}px;\n`;\n\nexport const ContactsListContainer = styled.div`\n  display: flex;\n\n  margin-top: ${p => p.theme.space[5]}px;\n`;\n","import styled from 'styled-components';\nimport Button from 'react-bootstrap/Button';\n\nexport const ContactsItem = styled.li`\n  margin-left: ${p => p.theme.space[0]}px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  width: 100%;\n`;\nexport const ItemWrap = styled.div`\n  width: calc(100% / 2);\n`;\n\nexport const DeleteButton = styled(Button)`\n  display: flex;\n  align-items: center;\n  justify-content: end;\n`;\n\nexport const Text = styled.p`\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Wrapp = styled.div`\n  display: flex;\n  height: 40px;\n  padding: ${p => p.theme.space[2]}px;\n  padding-right: ${p => p.theme.space[0]}px;\n\n  background-color: ${p => p.theme.colors.white};\n  border-radius: ${p => p.theme.radii.normal};\n  box-shadow: 2px 4px rgba(0, 0, 0, 0.25);\n\n  & + & {\n    margin-top: 10px;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIsLoading } from '../../redux/myContacts/contactsSelectors';\nimport { deleteContact } from 'redux/myContacts/contactsOperations';\nimport {\n  ContactsItem,\n  Text,\n  ItemWrap,\n  DeleteButton,\n  Wrapp,\n} from './ContactsItem.styled';\nimport SpinnerBootstrap from 'components/spinner/Spinner';\nimport CloseButton from 'react-bootstrap/CloseButton';\n\nexport const Item = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  const [idToDelete, setIdToDelete] = useState(null);\n\n  return (\n    <Wrapp>\n      <ContactsItem>\n        <ItemWrap>\n          {' '}\n          <Text>{name}</Text>\n        </ItemWrap>\n        <ItemWrap>\n          {' '}\n          <Text>{number}</Text>\n        </ItemWrap>\n      </ContactsItem>{' '}\n      <DeleteButton\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          setIdToDelete(id);\n          dispatch(deleteContact(id));\n        }}\n        disabled={isLoading}\n        variant=\"light\"\n      >\n        {id === idToDelete ? <SpinnerBootstrap /> : <CloseButton />}\n      </DeleteButton>\n    </Wrapp>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { List, Name, ContactsTitle } from './ContactsList.styled';\nimport { getVisibleContacts } from '../../redux/myContacts/contactsSelectors';\nimport { ContactsListContainer } from './ContactsList.styled';\nimport { Item } from './ContactsItem';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getVisibleContacts);\n\n  return (\n    <ContactsListContainer>\n      <ContactsTitle>Contacts list</ContactsTitle>\n      <List>\n        <Name>Name</Name> <span>Phone</span>\n        {contacts &&\n          contacts.map(({ id, name, number }) => {\n            return <Item key={id} id={id} name={name} number={number} />;\n          })}\n      </List>\n    </ContactsListContainer>\n  );\n};\n\nContactList.propTypes = {\n  contactsInfo: PropTypes.arrayOf(PropTypes.shape),\n  deleteContact: PropTypes.func,\n};\n","import styled from 'styled-components';\nimport { Field, Form } from 'formik';\nimport Button from 'react-bootstrap/Button';\n\nexport const Box = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  background-color: ${p => p.theme.colors.background};\n  height: 300px;\n  padding: ${p => p.theme.space[4]}px;\n\n  border-radius: ${p => p.theme.radii.normal};\n`;\nexport const Heading = styled.h2`\n  color: ${p => p.theme.colors.accentText};\n  text-shadow: ${p => p.theme.textShadow.standart};\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Input = styled(Field)`\n  width: 300px;\n  margin-top: ${p => p.theme.space[2]}px;\n  padding: ${p => p.theme.space[2]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  border: ${p => p.theme.borders.normal};\n`;\n\nexport const InputName = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-top: ${p => p.theme.space[2]}px;\n  color: ${p => p.theme.colors.accentText};\n`;\n\nexport const SubmitButton = styled(Button)`\n  display: flex;\n  justify-content: center;\n  width: 200px;\n  padding: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[5]}px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport { nanoid } from 'nanoid';\nimport {\n  Box,\n  Input,\n  InputName,\n  SubmitButton,\n  Heading,\n} from './FormContacts.styled';\nimport { getItems } from '../../redux/myContacts/contactsSelectors';\nimport { addContact } from 'redux/myContacts/contactsOperations';\nimport { toast } from 'react-toastify';\n\nconst idName = nanoid();\nconst idNumber = nanoid();\n\nexport const ContactsReviewForm = () => {\n  const items = useSelector(getItems);\n  const dispatch = useDispatch();\n\n  const handleSubmit = ({ name, number, id }, { resetForm }) => {\n    const contactsNames = items.map(items => items.name);\n\n    if (contactsNames.includes(name)) {\n      toast.error(` ${name} is already in contacts.`);\n    } else {\n      const newPerson = {\n        name,\n        number,\n        id,\n      };\n      dispatch(addContact(newPerson));\n    }\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={{ name: '', number: '' }} onSubmit={handleSubmit}>\n      <Box>\n        <Heading>Add new contact</Heading>\n        <InputName>\n          Name\n          <Input\n            autoComplete=\"off\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            id={idName}\n          />\n        </InputName>\n\n        <InputName>\n          Phone\n          <Input\n            autoComplete=\"off\"\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            id={idNumber}\n          />{' '}\n        </InputName>\n\n        <SubmitButton type=\"submit\" variant=\"info\">\n          Add\n        </SubmitButton>\n      </Box>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsContainer = styled.div`\n  display: flex;\n  justify-content: space-around;\n\n  margin-top: ${p => p.theme.space[5]}px;\n`;\nexport const Message = styled.p`\n  width: fit-content;\n  margin: 0 auto;\n  font-size: ${p => p.theme.fontSizes.l};\n  font-weight: ${p => p.theme.fontWeights.bold};\n  color: ${p => p.theme.colors.white};\n  padding: ${p => p.theme.space[3]}px;\n  margin-top: ${p => p.theme.space[5]}px;\n  border-radius: ${p => p.theme.radii.normal};\n  opacity: 0.9;\n  background-color: ${p => p.theme.colors.background};\n  text-shadow: ${p => p.theme.textShadow.standart};\n`;\nexport const Box = styled.div`\n  background-color: ${p => p.theme.colors.background};\n  padding: ${p => p.theme.space[4]}px;\n  border-radius: ${p => p.theme.radii.normal};\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/myContacts/contactsOperations';\nimport { getVisibleContacts } from 'redux/myContacts/contactsSelectors';\nimport { Filter } from 'components/filter/Filter';\nimport { ContactList } from '../components/list/ContactsList';\nimport { ContactsReviewForm } from 'components/form/FormContacts';\nimport { ContactsContainer, Message, Box } from './PagesStyled';\nimport { useAuth } from 'hooks/useAuth';\n\nconst ContactsPage = () => {\n  const contacts = useSelector(getVisibleContacts);\n  const dispatch = useDispatch();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>{`${user.name}'s contacts`}</title>\n      </Helmet>\n      {contacts.length !== 0 ? (\n        <ContactsContainer>\n          <ContactsReviewForm />{' '}\n          <Box>\n            <Filter />\n\n            <ContactList />\n          </Box>\n        </ContactsContainer>\n      ) : (\n        <ContactsContainer>\n          {' '}\n          <ContactsReviewForm />\n          <Box>\n            <Filter />\n            <Message>There are no contacts</Message>\n          </Box>\n        </ContactsContainer>\n      )}\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["getItems","state","phonebook","items","contacts","getIsLoading","isLoading","getFilter","filter","value","getVisibleContacts","allContacts","contactsFilter","contact","name","toLowerCase","includes","FilterContainer","styled","label","_templateObject","_taggedTemplateLiteral","p","theme","colors","accentText","FilterInput","input","_templateObject2","space","radii","normal","borders","none","filterId","nanoid","Filter","useSelector","dispatch","useDispatch","_jsxs","children","_jsx","TbSearch","type","onChange","e","filterSlice","actions","changeFilter","target","id","ContactsTitle","h2","textShadow","standart","white","fontSizes","l","fontWeights","bold","Name","span","List","ul","_templateObject3","ContactsListContainer","div","_templateObject4","ContactsItem","li","ItemWrap","DeleteButton","Button","Text","text","Wrapp","_templateObject5","Item","_ref","number","idToDelete","setIdToDelete","useState","onClick","deleteContact","disabled","variant","SpinnerBootstrap","CloseButton","ContactList","map","Box","Form","background","Heading","Input","Field","InputName","SubmitButton","idName","idNumber","ContactsReviewForm","Formik","initialValues","onSubmit","handleSubmit","_ref2","resetForm","toast","error","concat","newPerson","addContact","autoComplete","pattern","title","required","ContactsContainer","Message","ContactsPage","user","useAuth","useEffect","fetchContacts","_Fragment","Helmet","length"],"sourceRoot":""}